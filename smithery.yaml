# Smithery configuration file: https://smithery.ai/docs/config#smitheryyaml

# Metadata for discoverability and registry listing
name: vibe-check-mcp
version: 2.1.0
description: The definitive Vibe Coder's sanity check MCP server: Prevent cascading errors in AI workflows by implementing strategic pattern interrupts.
author: PV-Bhat
repository: https://github.com/PV-Bhat/vibe-check-mcp-server
license: MIT
category: ai-tools
tags:
  - cpi chain pattern interrupts
  - pruthvi bhat
  - rli reasoning lock in
  - murst
  - metacognition
  - workflow-optimization
  - gemini
  - openai
  - openrouter
capabilities:
  - meta-mentorship
  - agentic oversight
  - chain pattern-interrupt
  - vibe-check
  - self-improving-feedback
  - multi-provider-llm

# Requirements (e.g., for local setup)
requirements:
  node: ">=18.0.0"

# Installation options
installation:
  npm: "@mseep/vibe-check-mcp"  # For manual npm install

startCommand:
  type: stdio
  configSchema:
    type: object
    required: []  # Empty for lazy loading and tool scanning compatibility
    properties:
      geminiApiKey:
        type: string
        description: API key for Gemini integration (primary default).
        default: ""
      openaiApiKey:
        type: string
        description: API key for OpenAI integration.
        default: ""
      openrouterApiKey:
        type: string
        description: API key for OpenRouter integration, enabling provider routing.
        default: ""
      defaultProvider:
        type: string
        description: Default LLM provider (select for UI visibility).
        enum: ["gemini", "openai", "openrouter"]
        default: "openrouter"  # Highlights OpenRouter for better visibility
      defaultModel:
        type: string
        description: Default LLM model (e.g., gemini-2.5-pro).
        default: "gemini-2.5-pro"
  commandFunction: |-
    (config) => ({
      command: 'node',
      args: ['build/index.js'],
      env: {
        ...(config.geminiApiKey && { GEMINI_API_KEY: config.geminiApiKey }),
        ...(config.openaiApiKey && { OPENAI_API_KEY: config.openaiApiKey }),
        ...(config.openrouterApiKey && { OPENROUTER_API_KEY: config.openrouterApiKey }),
        ...(config.defaultProvider && { DEFAULT_LLM_PROVIDER: config.defaultProvider }),
        ...(config.defaultModel && { DEFAULT_MODEL: config.defaultModel }),
        DEBUG: 'true',  # Enables verbose logging for troubleshooting
        TIMEOUT: '120000'  # 2-minute timeout to match serverless constraints
      }
    })
  exampleConfig:
    geminiApiKey: EXAMPLE_GEMINI_API_KEY_123
    openaiApiKey: EXAMPLE_OPENAI_API_KEY
    openrouterApiKey: EXAMPLE_OPENROUTER_API_KEY
    defaultProvider: openrouter
    defaultModel: gemini-2.5-pro

# Documentation links
documentation:
  getting_started: https://github.com/PV-Bhat/vibe-check-mcp-server#installation
  configuration: https://github.com/PV-Bhat/vibe-check-mcp-server#configuration
  technical_reference: https://github.com/PV-Bhat/vibe-check-mcp-server/blob/main/docs/technical-reference.md
